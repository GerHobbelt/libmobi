name: Build

on:
  push:
    branches: [ public ]
  pull_request:
    branches: [ public ]

jobs:
  win64-build:

    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - name: setup-msys2
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        path-type: minimal
        update: true
        install: >-
          git
          autotools
          base-devel
          mingw-w64-x86_64-toolchain
          mingw-w64-x86_64-libtool
          mingw-w64-x86_64-libxml2
          mingw-w64-x86_64-zlib
    - name: checkout
      uses: actions/checkout@v2
    - name: autogen
      run: sh ./autogen.sh
    - name: configure
      run: ./configure --enable-debug
    - name: make
      run: make -j$(nproc)

    - name: Tag the repository
      id: tag
      run: |
        git config --global user.email "taobao2012id1@163.com"
        git config --global user.name "CuteLicense"
        #TAG=v$(date -Iseconds | sed 's/[T:\+]/-/g')
        TAG=v$(TZ=UTC-8 date +%F_%T | sed 's/-//g' | sed 's/[T:\+]//g')
        echo "$TAG"
        echo "tag=$TAG" >> $GITHUB_OUTPUT
        git tag -a $TAG -m "Published version $TAG" ${GITHUB_SHA}
        git push origin $TAG

    - name: Get Latest Tag
      id: latest_tag
      uses: WyriHaximus/github-action-get-previous-tag@v1

    - name: Echo latest tag
      run: echo '${{ steps.latest_tag.outputs.tag }}'
      
    - name: make check
      run: make -j$(nproc) check
      
    - name: make distcheck
      run: make -j$(nproc) distcheck

    - name: create release folder
      run: mkdir release

    - name: copy dll file
      run:  cp src/.libs/*.dll release/

    - name: copy exe files
      run:  cp tools/.libs/*.exe release/

    - name: Compress binaries
      uses: svenstaro/upx-action@v2
      with:
        files: |
          /release/*
          **/release/*

    - name: Zip Files
      uses: vimtor/action-zip@v1
      with:
        files: release/
        dest: ${{ steps.latest_tag.outputs.tag }}.zip

    - name: List results
      run:  ls -R |awk '{print i$0}' i=`pwd`'/'
      
    - name: Upload release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # if: startsWith(github.ref, 'refs/tags/')
      with:
        tag_name: ${{ steps.latest_tag.outputs.tag }}
        fail_on_unmatched_files: true
        generate_release_notes: false
        name: libmobi-${{ steps.latest_tag.outputs.tag }}
        files: |
          **/*.zip
          **/release/*.dll
          **/release/*.exe

    - name: upload debug artifacts
      uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: debug-release
        path: |
          **/*.dll
          **/tools/.libs/*.exe
          **/tools/*.dll
          #**/tests/test-suite.log
          #**/tests/samples/*.log
